[1] "indices.train"
  [1] 1017  679  129  930  471  299  270  597  330   37  729  878  485  874  382  975
 [17]  801  852  931  326 1081  554  111  532  556  889  343  582   40  537  375  248
 [33]  378   39  435  810  526  642   22  193  499  983  843  465  996   84  252  733
 [49]  620  557  287  614  329  487  855  851  858  619  576  990 1023  316 1042  650
 [65] 1087  811  955  282  143  442  285  920  682   48  501  716  511  295  536  693
 [81]  988  214  808  737  339  346  675   43    1   29  590  918  838  796  628  233
 [97]  293  573  942  369  451   86  483  327  622  355  819  812   49  361 1028  242
[113]  440  758  817  818  247  751  219  135 1067 1066  377  408   51  565  912  467
[129]  356  130  816   65  982  359  105  124   77  218  610  194   19  273  418  543
[145]  419  867  686  403  749  587   16 1061  777  974  604  634  664  138  719  500
[161]  761  672  229  423  421  140  126 1053  508  995  939  271  960  577  512  989
[177]  504  457  358  785  724  127  645   41  876  885  840  548  305  809  413 1031
[193] 1025  309  909 1076  441  856  117  896  470 1038  562  336  798  766  349   72
[209]  999  474  168 1015  925  903  455 1018  961  625  234  484  121   73  539  553
[225]   15  893  294   62  390  644   35  381  953 1029  697  986  665   31  549  767
[241]  743   28  862  148  797  908 1054  572  284  334 1072  268   93  886  300  714
[257]  951 1022  241   33  860  437  891 1009  217  792  805  108  998 1083  972  209
[273]  338  609  736  584  964  568  849  711  434  768  201  354  357  883  940  514
[289]  116  643  422  994  821  668  439  197  220  462 1084  235  513  880  173   83
[305]  788  407  324  720  731  185  615  765  180  464  674 1027  493 1003  444  167
[321]  981 1085  702  673  291  653  973  900  741  979 1004  759  775   56   25   81
[337]  472 1037  494  734  752  715  480  104    3  179  659  161  384  436  844  260
[353]  717   60  448  488  181  510  133  618  428  547  967  279  778  676 1059  611
[369]  772  846  150  869  169  598  962  822  530 1065  926   91  164  544  479  965
[385]  119 1046  927  706 1033  740   89  533  591  823  753   71  929  315  971  414
[401]  773  570  845  626  546  789  574  827  910  879  906  633  392  281  934    5
[417] 1069  492   20  183  957   79  802   69  688  473  703  296  141  132   42  635
[433]  781 1050  863  397  264  177  595  935  368  433  563  139  520  320  115  453
[449]  450 1052  396  914  952  159  705  495  109  519  624  944  393  826   45  112
[465]   27  222  266  158  897  760  386  175  835  261  166  800  340   92  412   99
[481]  516  128 1048  779 1055 1073  192   85  302  208  663  383  277   87  870  503
[497]  901 1071  515  943  312  959   58  308 1077  969  342  727  710  122   44  861
[513] 1016  100  313  232  481  360   11  310  602  754  256   54  146  888  946  328
[529]    6 1062  646  605  250  585  258  288  871  662  692  945  523  917  750  198
[1] "datos.entrenamiento"
[1] "datos.test"
[1] "verificar que la distribución de la variable respuesta `Direction` se distribuye aproximadamente de manera similar entre el set de entrenamiento y test"

 Down    Up 
0.474 0.526 
[1] "En este caso, las proporciones son similares en ambos casos."
[1] "ajustamos el modelo logístico con los datos asignados a entrenamiento:"

Call:
glm(formula = Direction ~ Lag2, family = "binomial", data = Weekly, 
    subset = indices.train)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-1.4307  -1.2166   0.9717   1.1309   1.5841  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)   
(Intercept)  0.09518    0.08647   1.101  0.27102   
Lag2         0.09624    0.03728   2.581  0.00984 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 752.70  on 543  degrees of freedom
Residual deviance: 745.67  on 542  degrees of freedom
AIC: 749.67

Number of Fisher Scoring iterations: 4

[1] "# Codificación de la variable respuesta para el modelo"
     Up
Down  0
Up    1
[1] "# Matriz de confusión"
           
pred.modelo Down  Up
       Down   63  79
       Up    163 240
[1] "# Test error rate"
[1] 0.4440367
[1] "La estimación del test error rate del modelo mediante validación simple es del 46,78%, por lo que el modelo acierta con sus predicciones en solo un 1 – 0,4678 = 53,2% de los casos."
[1] "Estadisticos del Vector donde se almacenarán los 100 test error estimados"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.3963  0.4344  0.4440  0.4447  0.4532  0.4771 
null device 
          1 
[1] "Como resultado de las 100 iteraciones, la estimación del test error oscila entre el 40,37% y el 48,99%, con una media del 44,43%, por lo que el porcentaje de acierto es del 55,57%."
[1] "# Creamos una tabla de porcentajes (de 0 a 1), redondeada a 3 digitos"

 Down    Up 
0.444 0.556 
[1] "Si siempre se predijera Direction = “Up”, el porcentaje de aciertos sería aproximadamente del 56%, por lo que este es el porcentaje mínimo que debería superar el modelo. En este caso, no se supera."
